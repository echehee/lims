/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.startarget.portlet.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.startarget.portlet.model.BudgetApplication;
import com.startarget.portlet.model.BudgetApplicationModel;
import com.startarget.portlet.model.BudgetApplicationSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the BudgetApplication service. Represents a row in the &quot;lims_BudgetApplication&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.startarget.portlet.model.BudgetApplicationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BudgetApplicationImpl}.
 * </p>
 *
 * @author chaojie
 * @see BudgetApplicationImpl
 * @see com.startarget.portlet.model.BudgetApplication
 * @see com.startarget.portlet.model.BudgetApplicationModel
 * @generated
 */
@JSON(strict = true)
public class BudgetApplicationModelImpl extends BaseModelImpl<BudgetApplication>
	implements BudgetApplicationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a budget application model instance should use the {@link com.startarget.portlet.model.BudgetApplication} interface instead.
	 */
	public static final String TABLE_NAME = "lims_BudgetApplication";
	public static final Object[][] TABLE_COLUMNS = {
			{ "budgetApplicationId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "applicantId", Types.BIGINT },
			{ "applicantName", Types.VARCHAR },
			{ "auditorId", Types.BIGINT },
			{ "auditorName", Types.VARCHAR },
			{ "auditDate", Types.TIMESTAMP },
			{ "approverId", Types.BIGINT },
			{ "approverName", Types.VARCHAR },
			{ "approveDate", Types.TIMESTAMP },
			{ "finisherId", Types.BIGINT },
			{ "finisherName", Types.VARCHAR },
			{ "finisherDate", Types.TIMESTAMP },
			{ "rejectReason", Types.VARCHAR },
			{ "applicationStatus", Types.VARCHAR },
			{ "applicationDescription", Types.VARCHAR },
			{ "applicationTotal", Types.DOUBLE },
			{ "projectName", Types.VARCHAR },
			{ "budgetName", Types.VARCHAR },
			{ "budgetItemId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table lims_BudgetApplication (budgetApplicationId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,applicantId LONG,applicantName VARCHAR(75) null,auditorId LONG,auditorName VARCHAR(75) null,auditDate DATE null,approverId LONG,approverName VARCHAR(75) null,approveDate DATE null,finisherId LONG,finisherName VARCHAR(75) null,finisherDate DATE null,rejectReason VARCHAR(75) null,applicationStatus VARCHAR(75) null,applicationDescription VARCHAR(75) null,applicationTotal DOUBLE,projectName VARCHAR(75) null,budgetName VARCHAR(75) null,budgetItemId LONG)";
	public static final String TABLE_SQL_DROP = "drop table lims_BudgetApplication";
	public static final String ORDER_BY_JPQL = " ORDER BY budgetApplication.budgetApplicationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY lims_BudgetApplication.budgetApplicationId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.startarget.portlet.model.BudgetApplication"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.startarget.portlet.model.BudgetApplication"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static BudgetApplication toModel(BudgetApplicationSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		BudgetApplication model = new BudgetApplicationImpl();

		model.setBudgetApplicationId(soapModel.getBudgetApplicationId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setApplicantId(soapModel.getApplicantId());
		model.setApplicantName(soapModel.getApplicantName());
		model.setAuditorId(soapModel.getAuditorId());
		model.setAuditorName(soapModel.getAuditorName());
		model.setAuditDate(soapModel.getAuditDate());
		model.setApproverId(soapModel.getApproverId());
		model.setApproverName(soapModel.getApproverName());
		model.setApproveDate(soapModel.getApproveDate());
		model.setFinisherId(soapModel.getFinisherId());
		model.setFinisherName(soapModel.getFinisherName());
		model.setFinisherDate(soapModel.getFinisherDate());
		model.setRejectReason(soapModel.getRejectReason());
		model.setApplicationStatus(soapModel.getApplicationStatus());
		model.setApplicationDescription(soapModel.getApplicationDescription());
		model.setApplicationTotal(soapModel.getApplicationTotal());
		model.setProjectName(soapModel.getProjectName());
		model.setBudgetName(soapModel.getBudgetName());
		model.setBudgetItemId(soapModel.getBudgetItemId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<BudgetApplication> toModels(
		BudgetApplicationSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<BudgetApplication> models = new ArrayList<BudgetApplication>(soapModels.length);

		for (BudgetApplicationSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.startarget.portlet.model.BudgetApplication"));

	public BudgetApplicationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _budgetApplicationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBudgetApplicationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _budgetApplicationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BudgetApplication.class;
	}

	@Override
	public String getModelClassName() {
		return BudgetApplication.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("budgetApplicationId", getBudgetApplicationId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("applicantId", getApplicantId());
		attributes.put("applicantName", getApplicantName());
		attributes.put("auditorId", getAuditorId());
		attributes.put("auditorName", getAuditorName());
		attributes.put("auditDate", getAuditDate());
		attributes.put("approverId", getApproverId());
		attributes.put("approverName", getApproverName());
		attributes.put("approveDate", getApproveDate());
		attributes.put("finisherId", getFinisherId());
		attributes.put("finisherName", getFinisherName());
		attributes.put("finisherDate", getFinisherDate());
		attributes.put("rejectReason", getRejectReason());
		attributes.put("applicationStatus", getApplicationStatus());
		attributes.put("applicationDescription", getApplicationDescription());
		attributes.put("applicationTotal", getApplicationTotal());
		attributes.put("projectName", getProjectName());
		attributes.put("budgetName", getBudgetName());
		attributes.put("budgetItemId", getBudgetItemId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long budgetApplicationId = (Long)attributes.get("budgetApplicationId");

		if (budgetApplicationId != null) {
			setBudgetApplicationId(budgetApplicationId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long applicantId = (Long)attributes.get("applicantId");

		if (applicantId != null) {
			setApplicantId(applicantId);
		}

		String applicantName = (String)attributes.get("applicantName");

		if (applicantName != null) {
			setApplicantName(applicantName);
		}

		Long auditorId = (Long)attributes.get("auditorId");

		if (auditorId != null) {
			setAuditorId(auditorId);
		}

		String auditorName = (String)attributes.get("auditorName");

		if (auditorName != null) {
			setAuditorName(auditorName);
		}

		Date auditDate = (Date)attributes.get("auditDate");

		if (auditDate != null) {
			setAuditDate(auditDate);
		}

		Long approverId = (Long)attributes.get("approverId");

		if (approverId != null) {
			setApproverId(approverId);
		}

		String approverName = (String)attributes.get("approverName");

		if (approverName != null) {
			setApproverName(approverName);
		}

		Date approveDate = (Date)attributes.get("approveDate");

		if (approveDate != null) {
			setApproveDate(approveDate);
		}

		Long finisherId = (Long)attributes.get("finisherId");

		if (finisherId != null) {
			setFinisherId(finisherId);
		}

		String finisherName = (String)attributes.get("finisherName");

		if (finisherName != null) {
			setFinisherName(finisherName);
		}

		Date finisherDate = (Date)attributes.get("finisherDate");

		if (finisherDate != null) {
			setFinisherDate(finisherDate);
		}

		String rejectReason = (String)attributes.get("rejectReason");

		if (rejectReason != null) {
			setRejectReason(rejectReason);
		}

		String applicationStatus = (String)attributes.get("applicationStatus");

		if (applicationStatus != null) {
			setApplicationStatus(applicationStatus);
		}

		String applicationDescription = (String)attributes.get(
				"applicationDescription");

		if (applicationDescription != null) {
			setApplicationDescription(applicationDescription);
		}

		Double applicationTotal = (Double)attributes.get("applicationTotal");

		if (applicationTotal != null) {
			setApplicationTotal(applicationTotal);
		}

		String projectName = (String)attributes.get("projectName");

		if (projectName != null) {
			setProjectName(projectName);
		}

		String budgetName = (String)attributes.get("budgetName");

		if (budgetName != null) {
			setBudgetName(budgetName);
		}

		Long budgetItemId = (Long)attributes.get("budgetItemId");

		if (budgetItemId != null) {
			setBudgetItemId(budgetItemId);
		}
	}

	@JSON
	@Override
	public long getBudgetApplicationId() {
		return _budgetApplicationId;
	}

	@Override
	public void setBudgetApplicationId(long budgetApplicationId) {
		_budgetApplicationId = budgetApplicationId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getApplicantId() {
		return _applicantId;
	}

	@Override
	public void setApplicantId(long applicantId) {
		_applicantId = applicantId;
	}

	@JSON
	@Override
	public String getApplicantName() {
		if (_applicantName == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicantName;
		}
	}

	@Override
	public void setApplicantName(String applicantName) {
		_applicantName = applicantName;
	}

	@JSON
	@Override
	public long getAuditorId() {
		return _auditorId;
	}

	@Override
	public void setAuditorId(long auditorId) {
		_auditorId = auditorId;
	}

	@JSON
	@Override
	public String getAuditorName() {
		if (_auditorName == null) {
			return StringPool.BLANK;
		}
		else {
			return _auditorName;
		}
	}

	@Override
	public void setAuditorName(String auditorName) {
		_auditorName = auditorName;
	}

	@JSON
	@Override
	public Date getAuditDate() {
		return _auditDate;
	}

	@Override
	public void setAuditDate(Date auditDate) {
		_auditDate = auditDate;
	}

	@JSON
	@Override
	public long getApproverId() {
		return _approverId;
	}

	@Override
	public void setApproverId(long approverId) {
		_approverId = approverId;
	}

	@JSON
	@Override
	public String getApproverName() {
		if (_approverName == null) {
			return StringPool.BLANK;
		}
		else {
			return _approverName;
		}
	}

	@Override
	public void setApproverName(String approverName) {
		_approverName = approverName;
	}

	@JSON
	@Override
	public Date getApproveDate() {
		return _approveDate;
	}

	@Override
	public void setApproveDate(Date approveDate) {
		_approveDate = approveDate;
	}

	@JSON
	@Override
	public long getFinisherId() {
		return _finisherId;
	}

	@Override
	public void setFinisherId(long finisherId) {
		_finisherId = finisherId;
	}

	@JSON
	@Override
	public String getFinisherName() {
		if (_finisherName == null) {
			return StringPool.BLANK;
		}
		else {
			return _finisherName;
		}
	}

	@Override
	public void setFinisherName(String finisherName) {
		_finisherName = finisherName;
	}

	@JSON
	@Override
	public Date getFinisherDate() {
		return _finisherDate;
	}

	@Override
	public void setFinisherDate(Date finisherDate) {
		_finisherDate = finisherDate;
	}

	@JSON
	@Override
	public String getRejectReason() {
		if (_rejectReason == null) {
			return StringPool.BLANK;
		}
		else {
			return _rejectReason;
		}
	}

	@Override
	public void setRejectReason(String rejectReason) {
		_rejectReason = rejectReason;
	}

	@JSON
	@Override
	public String getApplicationStatus() {
		if (_applicationStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicationStatus;
		}
	}

	@Override
	public void setApplicationStatus(String applicationStatus) {
		_applicationStatus = applicationStatus;
	}

	@JSON
	@Override
	public String getApplicationDescription() {
		if (_applicationDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicationDescription;
		}
	}

	@Override
	public void setApplicationDescription(String applicationDescription) {
		_applicationDescription = applicationDescription;
	}

	@JSON
	@Override
	public double getApplicationTotal() {
		return _applicationTotal;
	}

	@Override
	public void setApplicationTotal(double applicationTotal) {
		_applicationTotal = applicationTotal;
	}

	@JSON
	@Override
	public String getProjectName() {
		if (_projectName == null) {
			return StringPool.BLANK;
		}
		else {
			return _projectName;
		}
	}

	@Override
	public void setProjectName(String projectName) {
		_projectName = projectName;
	}

	@JSON
	@Override
	public String getBudgetName() {
		if (_budgetName == null) {
			return StringPool.BLANK;
		}
		else {
			return _budgetName;
		}
	}

	@Override
	public void setBudgetName(String budgetName) {
		_budgetName = budgetName;
	}

	@JSON
	@Override
	public long getBudgetItemId() {
		return _budgetItemId;
	}

	@Override
	public void setBudgetItemId(long budgetItemId) {
		_budgetItemId = budgetItemId;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			BudgetApplication.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BudgetApplication toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BudgetApplication)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BudgetApplicationImpl budgetApplicationImpl = new BudgetApplicationImpl();

		budgetApplicationImpl.setBudgetApplicationId(getBudgetApplicationId());
		budgetApplicationImpl.setGroupId(getGroupId());
		budgetApplicationImpl.setCompanyId(getCompanyId());
		budgetApplicationImpl.setUserId(getUserId());
		budgetApplicationImpl.setUserName(getUserName());
		budgetApplicationImpl.setCreateDate(getCreateDate());
		budgetApplicationImpl.setModifiedDate(getModifiedDate());
		budgetApplicationImpl.setApplicantId(getApplicantId());
		budgetApplicationImpl.setApplicantName(getApplicantName());
		budgetApplicationImpl.setAuditorId(getAuditorId());
		budgetApplicationImpl.setAuditorName(getAuditorName());
		budgetApplicationImpl.setAuditDate(getAuditDate());
		budgetApplicationImpl.setApproverId(getApproverId());
		budgetApplicationImpl.setApproverName(getApproverName());
		budgetApplicationImpl.setApproveDate(getApproveDate());
		budgetApplicationImpl.setFinisherId(getFinisherId());
		budgetApplicationImpl.setFinisherName(getFinisherName());
		budgetApplicationImpl.setFinisherDate(getFinisherDate());
		budgetApplicationImpl.setRejectReason(getRejectReason());
		budgetApplicationImpl.setApplicationStatus(getApplicationStatus());
		budgetApplicationImpl.setApplicationDescription(getApplicationDescription());
		budgetApplicationImpl.setApplicationTotal(getApplicationTotal());
		budgetApplicationImpl.setProjectName(getProjectName());
		budgetApplicationImpl.setBudgetName(getBudgetName());
		budgetApplicationImpl.setBudgetItemId(getBudgetItemId());

		budgetApplicationImpl.resetOriginalValues();

		return budgetApplicationImpl;
	}

	@Override
	public int compareTo(BudgetApplication budgetApplication) {
		long primaryKey = budgetApplication.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BudgetApplication)) {
			return false;
		}

		BudgetApplication budgetApplication = (BudgetApplication)obj;

		long primaryKey = budgetApplication.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<BudgetApplication> toCacheModel() {
		BudgetApplicationCacheModel budgetApplicationCacheModel = new BudgetApplicationCacheModel();

		budgetApplicationCacheModel.budgetApplicationId = getBudgetApplicationId();

		budgetApplicationCacheModel.groupId = getGroupId();

		budgetApplicationCacheModel.companyId = getCompanyId();

		budgetApplicationCacheModel.userId = getUserId();

		budgetApplicationCacheModel.userName = getUserName();

		String userName = budgetApplicationCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			budgetApplicationCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			budgetApplicationCacheModel.createDate = createDate.getTime();
		}
		else {
			budgetApplicationCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			budgetApplicationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			budgetApplicationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		budgetApplicationCacheModel.applicantId = getApplicantId();

		budgetApplicationCacheModel.applicantName = getApplicantName();

		String applicantName = budgetApplicationCacheModel.applicantName;

		if ((applicantName != null) && (applicantName.length() == 0)) {
			budgetApplicationCacheModel.applicantName = null;
		}

		budgetApplicationCacheModel.auditorId = getAuditorId();

		budgetApplicationCacheModel.auditorName = getAuditorName();

		String auditorName = budgetApplicationCacheModel.auditorName;

		if ((auditorName != null) && (auditorName.length() == 0)) {
			budgetApplicationCacheModel.auditorName = null;
		}

		Date auditDate = getAuditDate();

		if (auditDate != null) {
			budgetApplicationCacheModel.auditDate = auditDate.getTime();
		}
		else {
			budgetApplicationCacheModel.auditDate = Long.MIN_VALUE;
		}

		budgetApplicationCacheModel.approverId = getApproverId();

		budgetApplicationCacheModel.approverName = getApproverName();

		String approverName = budgetApplicationCacheModel.approverName;

		if ((approverName != null) && (approverName.length() == 0)) {
			budgetApplicationCacheModel.approverName = null;
		}

		Date approveDate = getApproveDate();

		if (approveDate != null) {
			budgetApplicationCacheModel.approveDate = approveDate.getTime();
		}
		else {
			budgetApplicationCacheModel.approveDate = Long.MIN_VALUE;
		}

		budgetApplicationCacheModel.finisherId = getFinisherId();

		budgetApplicationCacheModel.finisherName = getFinisherName();

		String finisherName = budgetApplicationCacheModel.finisherName;

		if ((finisherName != null) && (finisherName.length() == 0)) {
			budgetApplicationCacheModel.finisherName = null;
		}

		Date finisherDate = getFinisherDate();

		if (finisherDate != null) {
			budgetApplicationCacheModel.finisherDate = finisherDate.getTime();
		}
		else {
			budgetApplicationCacheModel.finisherDate = Long.MIN_VALUE;
		}

		budgetApplicationCacheModel.rejectReason = getRejectReason();

		String rejectReason = budgetApplicationCacheModel.rejectReason;

		if ((rejectReason != null) && (rejectReason.length() == 0)) {
			budgetApplicationCacheModel.rejectReason = null;
		}

		budgetApplicationCacheModel.applicationStatus = getApplicationStatus();

		String applicationStatus = budgetApplicationCacheModel.applicationStatus;

		if ((applicationStatus != null) && (applicationStatus.length() == 0)) {
			budgetApplicationCacheModel.applicationStatus = null;
		}

		budgetApplicationCacheModel.applicationDescription = getApplicationDescription();

		String applicationDescription = budgetApplicationCacheModel.applicationDescription;

		if ((applicationDescription != null) &&
				(applicationDescription.length() == 0)) {
			budgetApplicationCacheModel.applicationDescription = null;
		}

		budgetApplicationCacheModel.applicationTotal = getApplicationTotal();

		budgetApplicationCacheModel.projectName = getProjectName();

		String projectName = budgetApplicationCacheModel.projectName;

		if ((projectName != null) && (projectName.length() == 0)) {
			budgetApplicationCacheModel.projectName = null;
		}

		budgetApplicationCacheModel.budgetName = getBudgetName();

		String budgetName = budgetApplicationCacheModel.budgetName;

		if ((budgetName != null) && (budgetName.length() == 0)) {
			budgetApplicationCacheModel.budgetName = null;
		}

		budgetApplicationCacheModel.budgetItemId = getBudgetItemId();

		return budgetApplicationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(51);

		sb.append("{budgetApplicationId=");
		sb.append(getBudgetApplicationId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", applicantId=");
		sb.append(getApplicantId());
		sb.append(", applicantName=");
		sb.append(getApplicantName());
		sb.append(", auditorId=");
		sb.append(getAuditorId());
		sb.append(", auditorName=");
		sb.append(getAuditorName());
		sb.append(", auditDate=");
		sb.append(getAuditDate());
		sb.append(", approverId=");
		sb.append(getApproverId());
		sb.append(", approverName=");
		sb.append(getApproverName());
		sb.append(", approveDate=");
		sb.append(getApproveDate());
		sb.append(", finisherId=");
		sb.append(getFinisherId());
		sb.append(", finisherName=");
		sb.append(getFinisherName());
		sb.append(", finisherDate=");
		sb.append(getFinisherDate());
		sb.append(", rejectReason=");
		sb.append(getRejectReason());
		sb.append(", applicationStatus=");
		sb.append(getApplicationStatus());
		sb.append(", applicationDescription=");
		sb.append(getApplicationDescription());
		sb.append(", applicationTotal=");
		sb.append(getApplicationTotal());
		sb.append(", projectName=");
		sb.append(getProjectName());
		sb.append(", budgetName=");
		sb.append(getBudgetName());
		sb.append(", budgetItemId=");
		sb.append(getBudgetItemId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(79);

		sb.append("<model><model-name>");
		sb.append("com.startarget.portlet.model.BudgetApplication");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>budgetApplicationId</column-name><column-value><![CDATA[");
		sb.append(getBudgetApplicationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantId</column-name><column-value><![CDATA[");
		sb.append(getApplicantId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantName</column-name><column-value><![CDATA[");
		sb.append(getApplicantName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>auditorId</column-name><column-value><![CDATA[");
		sb.append(getAuditorId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>auditorName</column-name><column-value><![CDATA[");
		sb.append(getAuditorName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>auditDate</column-name><column-value><![CDATA[");
		sb.append(getAuditDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approverId</column-name><column-value><![CDATA[");
		sb.append(getApproverId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approverName</column-name><column-value><![CDATA[");
		sb.append(getApproverName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approveDate</column-name><column-value><![CDATA[");
		sb.append(getApproveDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>finisherId</column-name><column-value><![CDATA[");
		sb.append(getFinisherId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>finisherName</column-name><column-value><![CDATA[");
		sb.append(getFinisherName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>finisherDate</column-name><column-value><![CDATA[");
		sb.append(getFinisherDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rejectReason</column-name><column-value><![CDATA[");
		sb.append(getRejectReason());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicationStatus</column-name><column-value><![CDATA[");
		sb.append(getApplicationStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicationDescription</column-name><column-value><![CDATA[");
		sb.append(getApplicationDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicationTotal</column-name><column-value><![CDATA[");
		sb.append(getApplicationTotal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projectName</column-name><column-value><![CDATA[");
		sb.append(getProjectName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>budgetName</column-name><column-value><![CDATA[");
		sb.append(getBudgetName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>budgetItemId</column-name><column-value><![CDATA[");
		sb.append(getBudgetItemId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BudgetApplication.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			BudgetApplication.class
		};
	private long _budgetApplicationId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _applicantId;
	private String _applicantName;
	private long _auditorId;
	private String _auditorName;
	private Date _auditDate;
	private long _approverId;
	private String _approverName;
	private Date _approveDate;
	private long _finisherId;
	private String _finisherName;
	private Date _finisherDate;
	private String _rejectReason;
	private String _applicationStatus;
	private String _applicationDescription;
	private double _applicationTotal;
	private String _projectName;
	private String _budgetName;
	private long _budgetItemId;
	private BudgetApplication _escapedModel;
}