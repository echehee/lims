/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.startarget.portlet.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.startarget.portlet.model.Budget;
import com.startarget.portlet.model.BudgetModel;
import com.startarget.portlet.model.BudgetSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Budget service. Represents a row in the &quot;lims_Budget&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.startarget.portlet.model.BudgetModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BudgetImpl}.
 * </p>
 *
 * @author chaojie
 * @see BudgetImpl
 * @see com.startarget.portlet.model.Budget
 * @see com.startarget.portlet.model.BudgetModel
 * @generated
 */
@JSON(strict = true)
public class BudgetModelImpl extends BaseModelImpl<Budget>
	implements BudgetModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a budget model instance should use the {@link com.startarget.portlet.model.Budget} interface instead.
	 */
	public static final String TABLE_NAME = "lims_Budget";
	public static final Object[][] TABLE_COLUMNS = {
			{ "budgetId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "projectName", Types.VARCHAR },
			{ "budgetName", Types.VARCHAR },
			{ "budgetStartYear", Types.INTEGER },
			{ "budgetEndYear", Types.INTEGER },
			{ "budgetTotal", Types.DOUBLE },
			{ "budgetArrival", Types.DOUBLE }
		};
	public static final String TABLE_SQL_CREATE = "create table lims_Budget (budgetId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,projectName VARCHAR(75) null,budgetName VARCHAR(75) null,budgetStartYear INTEGER,budgetEndYear INTEGER,budgetTotal DOUBLE,budgetArrival DOUBLE)";
	public static final String TABLE_SQL_DROP = "drop table lims_Budget";
	public static final String ORDER_BY_JPQL = " ORDER BY budget.budgetId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY lims_Budget.budgetId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.startarget.portlet.model.Budget"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.startarget.portlet.model.Budget"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Budget toModel(BudgetSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Budget model = new BudgetImpl();

		model.setBudgetId(soapModel.getBudgetId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setProjectName(soapModel.getProjectName());
		model.setBudgetName(soapModel.getBudgetName());
		model.setBudgetStartYear(soapModel.getBudgetStartYear());
		model.setBudgetEndYear(soapModel.getBudgetEndYear());
		model.setBudgetTotal(soapModel.getBudgetTotal());
		model.setBudgetArrival(soapModel.getBudgetArrival());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Budget> toModels(BudgetSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Budget> models = new ArrayList<Budget>(soapModels.length);

		for (BudgetSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.startarget.portlet.model.Budget"));

	public BudgetModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _budgetId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBudgetId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _budgetId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Budget.class;
	}

	@Override
	public String getModelClassName() {
		return Budget.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("budgetId", getBudgetId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("projectName", getProjectName());
		attributes.put("budgetName", getBudgetName());
		attributes.put("budgetStartYear", getBudgetStartYear());
		attributes.put("budgetEndYear", getBudgetEndYear());
		attributes.put("budgetTotal", getBudgetTotal());
		attributes.put("budgetArrival", getBudgetArrival());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long budgetId = (Long)attributes.get("budgetId");

		if (budgetId != null) {
			setBudgetId(budgetId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String projectName = (String)attributes.get("projectName");

		if (projectName != null) {
			setProjectName(projectName);
		}

		String budgetName = (String)attributes.get("budgetName");

		if (budgetName != null) {
			setBudgetName(budgetName);
		}

		Integer budgetStartYear = (Integer)attributes.get("budgetStartYear");

		if (budgetStartYear != null) {
			setBudgetStartYear(budgetStartYear);
		}

		Integer budgetEndYear = (Integer)attributes.get("budgetEndYear");

		if (budgetEndYear != null) {
			setBudgetEndYear(budgetEndYear);
		}

		Double budgetTotal = (Double)attributes.get("budgetTotal");

		if (budgetTotal != null) {
			setBudgetTotal(budgetTotal);
		}

		Double budgetArrival = (Double)attributes.get("budgetArrival");

		if (budgetArrival != null) {
			setBudgetArrival(budgetArrival);
		}
	}

	@JSON
	@Override
	public long getBudgetId() {
		return _budgetId;
	}

	@Override
	public void setBudgetId(long budgetId) {
		_budgetId = budgetId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getProjectName() {
		if (_projectName == null) {
			return StringPool.BLANK;
		}
		else {
			return _projectName;
		}
	}

	@Override
	public void setProjectName(String projectName) {
		_projectName = projectName;
	}

	@JSON
	@Override
	public String getBudgetName() {
		if (_budgetName == null) {
			return StringPool.BLANK;
		}
		else {
			return _budgetName;
		}
	}

	@Override
	public void setBudgetName(String budgetName) {
		_budgetName = budgetName;
	}

	@JSON
	@Override
	public int getBudgetStartYear() {
		return _budgetStartYear;
	}

	@Override
	public void setBudgetStartYear(int budgetStartYear) {
		_budgetStartYear = budgetStartYear;
	}

	@JSON
	@Override
	public int getBudgetEndYear() {
		return _budgetEndYear;
	}

	@Override
	public void setBudgetEndYear(int budgetEndYear) {
		_budgetEndYear = budgetEndYear;
	}

	@JSON
	@Override
	public double getBudgetTotal() {
		return _budgetTotal;
	}

	@Override
	public void setBudgetTotal(double budgetTotal) {
		_budgetTotal = budgetTotal;
	}

	@JSON
	@Override
	public double getBudgetArrival() {
		return _budgetArrival;
	}

	@Override
	public void setBudgetArrival(double budgetArrival) {
		_budgetArrival = budgetArrival;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Budget.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Budget toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Budget)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BudgetImpl budgetImpl = new BudgetImpl();

		budgetImpl.setBudgetId(getBudgetId());
		budgetImpl.setGroupId(getGroupId());
		budgetImpl.setCompanyId(getCompanyId());
		budgetImpl.setUserId(getUserId());
		budgetImpl.setUserName(getUserName());
		budgetImpl.setCreateDate(getCreateDate());
		budgetImpl.setModifiedDate(getModifiedDate());
		budgetImpl.setProjectName(getProjectName());
		budgetImpl.setBudgetName(getBudgetName());
		budgetImpl.setBudgetStartYear(getBudgetStartYear());
		budgetImpl.setBudgetEndYear(getBudgetEndYear());
		budgetImpl.setBudgetTotal(getBudgetTotal());
		budgetImpl.setBudgetArrival(getBudgetArrival());

		budgetImpl.resetOriginalValues();

		return budgetImpl;
	}

	@Override
	public int compareTo(Budget budget) {
		long primaryKey = budget.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Budget)) {
			return false;
		}

		Budget budget = (Budget)obj;

		long primaryKey = budget.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Budget> toCacheModel() {
		BudgetCacheModel budgetCacheModel = new BudgetCacheModel();

		budgetCacheModel.budgetId = getBudgetId();

		budgetCacheModel.groupId = getGroupId();

		budgetCacheModel.companyId = getCompanyId();

		budgetCacheModel.userId = getUserId();

		budgetCacheModel.userName = getUserName();

		String userName = budgetCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			budgetCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			budgetCacheModel.createDate = createDate.getTime();
		}
		else {
			budgetCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			budgetCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			budgetCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		budgetCacheModel.projectName = getProjectName();

		String projectName = budgetCacheModel.projectName;

		if ((projectName != null) && (projectName.length() == 0)) {
			budgetCacheModel.projectName = null;
		}

		budgetCacheModel.budgetName = getBudgetName();

		String budgetName = budgetCacheModel.budgetName;

		if ((budgetName != null) && (budgetName.length() == 0)) {
			budgetCacheModel.budgetName = null;
		}

		budgetCacheModel.budgetStartYear = getBudgetStartYear();

		budgetCacheModel.budgetEndYear = getBudgetEndYear();

		budgetCacheModel.budgetTotal = getBudgetTotal();

		budgetCacheModel.budgetArrival = getBudgetArrival();

		return budgetCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{budgetId=");
		sb.append(getBudgetId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", projectName=");
		sb.append(getProjectName());
		sb.append(", budgetName=");
		sb.append(getBudgetName());
		sb.append(", budgetStartYear=");
		sb.append(getBudgetStartYear());
		sb.append(", budgetEndYear=");
		sb.append(getBudgetEndYear());
		sb.append(", budgetTotal=");
		sb.append(getBudgetTotal());
		sb.append(", budgetArrival=");
		sb.append(getBudgetArrival());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.startarget.portlet.model.Budget");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>budgetId</column-name><column-value><![CDATA[");
		sb.append(getBudgetId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projectName</column-name><column-value><![CDATA[");
		sb.append(getProjectName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>budgetName</column-name><column-value><![CDATA[");
		sb.append(getBudgetName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>budgetStartYear</column-name><column-value><![CDATA[");
		sb.append(getBudgetStartYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>budgetEndYear</column-name><column-value><![CDATA[");
		sb.append(getBudgetEndYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>budgetTotal</column-name><column-value><![CDATA[");
		sb.append(getBudgetTotal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>budgetArrival</column-name><column-value><![CDATA[");
		sb.append(getBudgetArrival());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Budget.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Budget.class };
	private long _budgetId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _projectName;
	private String _budgetName;
	private int _budgetStartYear;
	private int _budgetEndYear;
	private double _budgetTotal;
	private double _budgetArrival;
	private Budget _escapedModel;
}